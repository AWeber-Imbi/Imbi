paths:
  create:
    post:
      summary: Create Record
      description: Create a new project fact type record
      requestBody:
        description: The project fact type record to create
        content:
          application/json: &postContent
            schema:
              $ref: '../schemas/project_fact_type.yaml'
            examples:
              record:
                $ref: '#/components/examples/record'
          application/msgpack:
            <<: *postContent
      tags: [Project Fact Types]
      responses:
        '200': { $ref: '#/components/responses/Success' }
        '400': { $ref: '../components/responses.yaml#/RequestError' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '409': { $ref: '../components/responses.yaml#/Conflict' }

  manage:
    get:
      summary: Get Record
      description: Retrieve a project fact type record
      tags: [Project Fact Types]
      responses:
        '200': { $ref: '#/components/responses/Success' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '404': { $ref: '../components/responses.yaml#/NotFound' }
    patch:
      summary: Update Record
      description: >-
        Update a project fact type, providing a JSON Patch (RFC-6209) payload of update
        operations to apply.
      tags: [Project Fact Types]
      requestBody:
        description: JSON Patch Payload
        content:
          application/json: &patchContent
            schema:
              $ref: '../components/schemas.yaml#/jsonPatch'
          application/msgpack:
            <<: *patchContent
          application/json-patch+json:
            <<: *patchContent
          application/json-patch+msgpack:
            <<: *patchContent
      responses:
        '200': { $ref: '#/components/responses/Success' }
        '304': { $ref: '../components/responses.yaml#/NoChanges' }
        '400': { $ref: '../components/responses.yaml#/RequestError' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '404': { $ref: '../components/responses.yaml#/NotFound' }
        '409': { $ref: '../components/responses.yaml#/Conflict' }
    delete:
      summary: Delete Record
      description: Remove a project fact type record
      tags: [Project Fact Types]
      responses:
        '204': { $ref: '../components/responses.yaml#/RecordRemoved' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '404': { $ref: '../components/responses.yaml#/NotFound' }
    parameters:
      - name: name
        in: path
        description: Project Fact Type Name
        required: true
        schema:
          type: string
          pattern: '[\w_]+'

components:
  examples:
    record:
      summary: A full project fact type record
      value:
        id: d2560576-b339-4f2c-9ec5-268969634c7b
        project_type: API
        name: Programming Language
        weight: 25

  responses:
    Success:
      description: The request to create, update, or retrieve the project fact type was successful
      headers:
        Cache-Control: { $ref: '../components/headers.yaml#/Cache-Control' }
        Last-Modified: { $ref: '../components/headers.yaml#/Last-Modified' }
        Link: { $ref: '../components/headers.yaml#/Link' }
      content:
        application/json: &responsesSuccess
          schema:
            $ref: '../schemas/project_fact_type.yaml'
          examples:
            record:
              $ref: '#/components/examples/record'
        application/msgpack:
          <<: *responsesSuccess

tag:
  name: Project Fact Types
  description: |-
    Management of records that define types facts that may be collected for a project.

    Project facts may be used to calculate a current project health score. For more
    information on project health score, see the compliance documentation.
