paths:
  create:
    post:
      summary: Create Record
      description: Create a new project type record
      requestBody:
        description: The project type record to create
        content:
          application/json: &postContent
            schema:
              $ref: '../schemas/project_type.yaml'
            examples:
              record:
                $ref: '#/components/examples/record'
          application/msgpack:
            <<: *postContent
      tags: [Project Types]
      responses:
        "200": {$ref: '#/components/responses/Success'}
        "400": {$ref: '../components/responses.yaml#/RequestError'}
        "401": {$ref: '../components/responses.yaml#/Unauthorized'}
        "409": {$ref: '../components/responses.yaml#/Conflict'}

  manage:
    get:
      summary: Get Record
      description: Retrieve a project type record
      tags: [Project Types]
      responses:
        "200": {$ref: '#/components/responses/Success'}
        "401": {$ref: '../components/responses.yaml#/Unauthorized'}
        "404": {$ref: '../components/responses.yaml#/NotFound'}
    patch:
      summary: Update Record
      description: >-
        Update a project type, providing a JSON Patch (RFC-6209) payload of update
        operations to apply.
      tags: [Project Types]
      requestBody:
        description: JSON Patch Payload
        content:
          application/json: &patchContent
            schema:
              $ref: '../components/schemas.yaml#/jsonPatch'
          application/msgpack:
            <<: *patchContent
      responses:
        "200": {$ref: '#/components/responses/Success'}
        "304": {$ref: '../components/responses.yaml#/NoChanges'}
        "400": {$ref: '../components/responses.yaml#/RequestError'}
        "401": {$ref: '../components/responses.yaml#/Unauthorized'}
        "404": {$ref: '../components/responses.yaml#/NotFound'}
        "409": {$ref: '../components/responses.yaml#/Conflict'}
    delete:
      summary: Delete Record
      description: Remove a project type record
      tags: [Project Types]
      responses:
        "204": {$ref: '../components/responses.yaml#/RecordRemoved'}
        "401": {$ref: '../components/responses.yaml#/Unauthorized'}
        "404": {$ref: '../components/responses.yaml#/NotFound'}
    parameters:
      - name: name
        in: path
        description: Project Type Name
        required: true
        schema:
          type: string
          pattern: '[\w_]+'

components:
  examples:
    record:
      summary: A full project type record
      value:
        project_type: HTTP API
        description: RESTful HTTP 1.1 API
        slug: http-api
        icon_class: fab fa-aws

  responses:
    Success:
      description: The request to create, update, or retrieve the project type was successful
      headers:
        Cache-Control: {$ref: '../components/headers.yaml#/Cache-Control'}
        Last-Modified: {$ref: '../components/headers.yaml#/Last-Modified'}
        Link: {$ref: '../components/headers.yaml#/Link'}
      content:
        application/json: &responsesSuccess
          schema:
            $ref: '../schemas/project_type.yaml'
          examples:
            record:
              $ref: '#/components/examples/record'
        application/msgpack:
          <<: *responsesSuccess

tag:
  name: Project Types
  description: Endpoints used for the management different types of projects managed in Imbi (APIs, Databases, etc)
