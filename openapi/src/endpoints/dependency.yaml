paths:
  manage:
    get:
      summary: Get Dependency
      description: Retrieve a project dependency record
      tags: [Projects]
      responses:
        '200': { $ref: '#/components/responses/Success' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '404': { $ref: '../components/responses.yaml#/NotFound' }
    delete:
      summary: Delete Dependency
      description: Remove a project dependency record
      tags: [Projects]
      responses:
        '204': { $ref: '../components/responses.yaml#/RecordRemoved' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '404': { $ref: '../components/responses.yaml#/NotFound' }
    parameters:
      - name: id
        in: path
        description: The ID of the project with the dependency
        required: true
        schema:
          type: number
      - name: dependency_id
        in: path
        description: The ID of the project that is dependend upon
        required: true
        schema:
          type: number

components:
  examples:
    record:
      summary: A project dependency record
      value:
        project_id: 2
        created_by: test_user
        dependency_id: 1

  responses:
    Success:
      description: The request to create, update, or retrieve the project was successful
      headers:
        Cache-Control: { $ref: '../components/headers.yaml#/Cache-Control' }
        Last-Modified: { $ref: '../components/headers.yaml#/Last-Modified' }
        Link: { $ref: '../components/headers.yaml#/Link' }
      content:
        application/json: &responsesSuccess
          schema:
            $ref: '../schemas/project_dependency.yaml#/read'
          examples:
            record:
              $ref: '#/components/examples/record'
        application/msgpack:
          <<: *responsesSuccess
