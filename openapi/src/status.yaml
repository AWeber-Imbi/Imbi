paths:
  status:
    get:
      security: []
      description: |-
        Returns information about the running service, including runtime metrics
        including counters and durations.
      summary: Service Status
      operationId: status
      parameters:
        - in: query
          name: flush
          description: Flush the stats / metrics database of recorded values
          schema:
            type: string
            default: 'false'
            enum:
              - 'true'
              - 'false'
      tags:
        - Health Check / Status
      responses:
        '200':
          description: Service Available
          content:
            application/json: &statusAvailable
              schema:
                $ref: '#/components/schemas/status'
              example:
                $ref: '#/components/examples/statusOk/value'
            application/msgpack:
              <<: *statusAvailable
        '503':
          description: Service Unavailable
          content:
            application/json: &statusUnavailable
              schema:
                $ref: '#/components/schemas/status'
              example:
                $ref: '#/components/examples/statusError/value'
            application/msgpack:
              <<: *statusUnavailable

components:
  examples:
    statusOk:
      summary: Example when the service is available and processing requests
      value: &exampleStatus
        counters:
          'response.Base.GET.200': 10
        durations:
          'request.Base.GET.200':
            - ['2018-12-03 23:46:54+00:00', 0.2566049098968506]
            - ['2018-12-03 23:31:50+00:00', 0.33482813835144043]
            - ['2018-12-03 23:00:39+00:00', 0.25607776641845703]
        postgres:
          available: true
          pool_size: 10
          pool_free: 9
        started_at: 2020-01-01T00:00:00+00:00
        status: ok
        system:
          language:
            name: python
            implementation: CPython
            version: 3.7.6
          os:
            name: Alpine Linux
            version: 3.11.6
        uptime: PT6M9.053148S
        version: '{{ settings["version"] }}'
    statusError:
      summary: Example when the service is unavailable
      value:
        <<: *exampleStatus
        status: unavailable

  schemas:
    status:
      type: object
      properties:
        counters:
          type: object
          additionalProperties:
            type: number
          description: A key-value pair of internal counters
        durations:
          type: object
          description: |-
            A key-value pair of recorded durations where the value is an array
            of timestamp and duration in seconds
          additionalProperties:
            type: array
            items:
              type: array
              items:
                oneOf:
                  - type: string
                    format: iso8601-timestamp
                  - type: number
                    format: float
              minItems: 2
              maxItems: 2
        postgres:
          type: object
          description: PostgreSQL pool information
          properties:
            pool_free:
              type: number
              description: |-
                Indicates the current number of idle connections available to
                process queries
            pool_size:
              type: number
              description: |-
                Indicates the current quantity of open connections to Postgres
        started_at:
          type: string
          format: iso8601-timestamp
          description: The ISO-8601 formatted timestamp of when the service started
        status:
          type: string
          description: The current application status
          enum:
            - ok
            - maintenance
        uptime:
          type: string
          description: |-
            ISO-8601 formatted duration indicating how long the service has been running
        version:
          type: string
          description: The version
